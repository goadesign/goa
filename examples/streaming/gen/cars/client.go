// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// cars client
//
// Command:
// $ goa gen goa.design/goa/examples/streaming/design -o
// $(GOPATH)/src/goa.design/goa/examples/streaming

package carssvc

import (
	"context"

	goa "goa.design/goa"
)

// Client is the "cars" service client.
type Client struct {
	LoginEndpoint goa.Endpoint
	ListEndpoint  goa.Endpoint
}

// NewClient initializes a "cars" service client given the endpoints.
func NewClient(login, list goa.Endpoint) *Client {
	return &Client{
		LoginEndpoint: login,
		ListEndpoint:  list,
	}
}

// Login calls the "login" endpoint of the "cars" service.
// Login may return the following errors:
//	- "unauthorized" (type Unauthorized)
//	- error: internal error
func (c *Client) Login(ctx context.Context, p *LoginPayload) (res string, err error) {
	var ires interface{}
	ires, err = c.LoginEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// List calls the "list" endpoint of the "cars" service.
// List may return the following errors:
//	- "unauthorized" (type Unauthorized)
//	- "invalid-scopes" (type InvalidScopes)
//	- error: internal error
func (c *Client) List(ctx context.Context, p *ListPayload) (res ListClientStream, err error) {
	var ires interface{}
	ires, err = c.ListEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(ListClientStream), nil
}
