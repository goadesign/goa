swagger: "2.0"
info:
  title: Chatter service describing the streaming features of goa v2.
  version: ""
host: localhost:80
consumes:
- application/json
- application/xml
- application/gob
produces:
- application/json
- application/xml
- application/gob
paths:
  /echoer:
    get:
      tags:
      - chatter
      summary: echoer chatter
      description: |-
        Echoes the message sent by the client.

        Required security scopes:
          * `stream:write`
      operationId: chatter#echoer
      parameters:
      - name: Authorization
        in: header
        description: JWT used for authentication
        required: true
        type: string
      responses:
        "101":
          description: Switching Protocols response.
          schema:
            type: string
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/ChatterEchoerUnauthorizedResponseBody'
        "403":
          description: Forbidden response.
          schema:
            $ref: '#/definitions/ChatterEchoerInvalidScopesResponseBody'
      schemes:
      - grpc
      - ws
      security:
      - jwt: []
  /history:
    get:
      tags:
      - chatter
      summary: history chatter
      description: |-
        Returns the chat messages sent to the server.

        Required security scopes:
          * `stream:read`
      operationId: chatter#history
      parameters:
      - name: view
        in: query
        description: View to use to render the result
        required: false
        type: string
      - name: Authorization
        in: header
        description: JWT used for authentication
        required: true
        type: string
      responses:
        "101":
          description: Switching Protocols response.
          schema:
            $ref: '#/definitions/ChatterHistoryResponseBody'
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/ChatterHistoryUnauthorizedResponseBody'
        "403":
          description: Forbidden response.
          schema:
            $ref: '#/definitions/ChatterHistoryInvalidScopesResponseBody'
      schemes:
      - grpc
      - ws
      security:
      - jwt: []
  /listener:
    get:
      tags:
      - chatter
      summary: listener chatter
      description: |-
        Listens to the messages sent by the client.

        Required security scopes:
          * `stream:write`
      operationId: chatter#listener
      parameters:
      - name: Authorization
        in: header
        description: JWT used for authentication
        required: true
        type: string
      responses:
        "101":
          description: Switching Protocols response.
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/ChatterListenerUnauthorizedResponseBody'
        "403":
          description: Forbidden response.
          schema:
            $ref: '#/definitions/ChatterListenerInvalidScopesResponseBody'
      schemes:
      - grpc
      - ws
      security:
      - jwt: []
  /login:
    post:
      tags:
      - chatter
      summary: login chatter
      description: Creates a valid JWT token for auth to chat.
      operationId: chatter#login
      responses:
        "200":
          description: OK response.
          schema:
            type: string
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/ChatterLoginUnauthorizedResponseBody'
      schemes:
      - grpc
      - http
      security:
      - basic: []
  /summary:
    get:
      tags:
      - chatter
      summary: summary chatter
      description: |-
        Summarizes the chat messages sent by the client.

        Required security scopes:
          * `stream:write`
      operationId: chatter#summary
      parameters:
      - name: Authorization
        in: header
        description: JWT used for authentication
        required: true
        type: string
      responses:
        "101":
          description: Switching Protocols response.
          schema:
            $ref: '#/definitions/ChatterChatSummaryResponseCollection'
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/ChatterSummaryUnauthorizedResponseBody'
        "403":
          description: Forbidden response.
          schema:
            $ref: '#/definitions/ChatterSummaryInvalidScopesResponseBody'
      schemes:
      - grpc
      - ws
      security:
      - jwt: []
definitions:
  ChatSummaryResponse:
    title: 'Mediatype identifier: application/vnd.goa.summary; view=default'
    type: object
    properties:
      length:
        type: integer
        description: Length of the message sent
        example: 3586679018756095765
        format: int64
      message:
        type: string
        description: Message sent to the server
        example: Nobis voluptatem dolorem expedita harum.
      sent_at:
        type: string
        description: Time at which the message was sent
        example: "1983-06-06T03:57:42Z"
        format: date-time
    description: ChatSummaryResponse result type (default view)
    example:
      length: 9188469515160886076
      message: Quibusdam voluptate nulla autem quisquam dolorum.
      sent_at: "2009-06-14T08:11:36Z"
    required:
    - message
  ChatterChatSummaryResponseCollection:
    title: 'Mediatype identifier: application/vnd.goa.summary; type=collection; view=default'
    type: array
    items:
      $ref: '#/definitions/ChatSummaryResponse'
    description: SummaryResponseBody is the result type for an array of ChatSummaryResponse
      (default view)
    example:
    - length: 3915772424247758741
      message: Sequi tenetur.
      sent_at: "2009-01-25T10:15:11Z"
    - length: 3915772424247758741
      message: Sequi tenetur.
      sent_at: "2009-01-25T10:15:11Z"
    - length: 3915772424247758741
      message: Sequi tenetur.
      sent_at: "2009-01-25T10:15:11Z"
  ChatterEchoerInvalidScopesResponseBody:
    title: ChatterEchoerInvalidScopesResponseBody
    type: string
    example: Laudantium est consectetur ut.
  ChatterEchoerUnauthorizedResponseBody:
    title: ChatterEchoerUnauthorizedResponseBody
    type: string
    example: Nihil veniam nihil.
  ChatterHistoryInvalidScopesResponseBody:
    title: ChatterHistoryInvalidScopesResponseBody
    type: string
    example: Tenetur non fugiat.
  ChatterHistoryResponseBody:
    title: 'Mediatype identifier: application/vnd.goa.summary; view=default'
    type: object
    properties:
      length:
        type: integer
        description: Length of the message sent
        example: 5227746826151536988
        format: int64
      message:
        type: string
        description: Message sent to the server
        example: Cum cum.
      sent_at:
        type: string
        description: Time at which the message was sent
        example: "1978-02-25T14:12:07Z"
        format: date-time
    description: HistoryResponseBody result type (default view)
    example:
      length: 8447087998172944251
      message: A et soluta.
      sent_at: "1992-03-13T17:19:43Z"
    required:
    - message
  ChatterHistoryUnauthorizedResponseBody:
    title: ChatterHistoryUnauthorizedResponseBody
    type: string
    example: Ut fuga dolores nisi qui est accusamus.
  ChatterListenerInvalidScopesResponseBody:
    title: ChatterListenerInvalidScopesResponseBody
    type: string
    example: Aut est at molestiae.
  ChatterListenerUnauthorizedResponseBody:
    title: ChatterListenerUnauthorizedResponseBody
    type: string
    example: Qui voluptas accusantium est sequi vel nihil.
  ChatterLoginUnauthorizedResponseBody:
    title: ChatterLoginUnauthorizedResponseBody
    type: string
    description: Credentials are invalid
    example: Maiores numquam voluptatibus voluptatem.
  ChatterSummaryInvalidScopesResponseBody:
    title: ChatterSummaryInvalidScopesResponseBody
    type: string
    example: Quibusdam consequatur suscipit non fugit et.
  ChatterSummaryUnauthorizedResponseBody:
    title: ChatterSummaryUnauthorizedResponseBody
    type: string
    example: Consequatur sint eius magni quod.
securityDefinitions:
  basic:
    type: basic
    description: Secures the login endpoint.
  jwt:
    type: apiKey
    description: |-
      Secures endpoint by requiring a valid JWT token. Supports scopes "stream:read" and "stream:write".
      **Security Scopes**:
        * `stream:read`: Read-only access
        * `stream:write`: Read and write access
    name: Authorization
    in: header
