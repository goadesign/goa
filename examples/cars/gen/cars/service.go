// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// cars service
//
// Command:
// $ goa gen goa.design/goa/examples/cars/design -o
// $(GOPATH)/src/goa.design/goa/examples/cars

package carssvc

import (
	"context"
)

// The cars service lists car models by body style.
type Service interface {
	// Creates a valid JWT
	Login(context.Context, *LoginPayload) (res string, err error)
	// Lists car models by body style.
	List(context.Context, *ListPayload, ListServerStream) (err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "cars"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"login", "list"}

// listServerStream is the interface a "list" endpoint stream must satisfy.
type ListServerStream interface {
	// Send sends Car type across the "list" endpoint stream.
	Send(*Car) error
	// Close closes the "list" endpoint stream.
	Close() error
}

// listClientStream is the interface a "list" endpoint stream must satisfy.
type ListClientStream interface {
	// Recv receives Car type from the "list" endpoint stream.
	Recv() (*Car, error)
}

// Credentials used to authenticate to retrieve JWT token
type LoginPayload struct {
	User     string
	Password string
}

// ListPayload is the payload type of the cars service list method.
type ListPayload struct {
	// The car body style.
	Style string
	// JWT used for authentication
	Token string
}

// Car is the result type of the cars service list method.
type Car struct {
	// The make of the car
	Make string
	// The car model
	Model string
	// The car body style
	BodyStyle string
}

// Credentials are invalid
type Unauthorized string

type InvalidScopes string

// Error returns an error description.
func (e Unauthorized) Error() string {
	return "Credentials are invalid"
}

// ErrorName returns "unauthorized".
func (e Unauthorized) ErrorName() string {
	return "unauthorized"
}

// Error returns an error description.
func (e InvalidScopes) Error() string {
	return ""
}

// ErrorName returns "invalid-scopes".
func (e InvalidScopes) ErrorName() string {
	return "invalid-scopes"
}
